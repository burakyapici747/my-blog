services:
  mysqldb:
    container_name: db-mysql
    image: mysql:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQLDB_DATABASE}
      MYSQL_USER: ${MYSQLDB_USER}
      MYSQL_PASSWORD: ${MYSQLDB_PASSWORD}
    ports:
      - "${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}"
    networks:
      - myblog-network
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u ${MYSQLDB_USER} -p${MYSQLDB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend-springboot
    image: burakyapici747/blog-api:latest
    depends_on:
      mysqldb:
        condition: service_healthy
    restart: on-failure
    env_file: ./.env
    ports:
      - "${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:${MYSQLDB_DOCKER_PORT}/${MYSQLDB_DATABASE}?useSSL=false",
        "spring.datasource.username" : "${MYSQLDB_USER}",
        "spring.datasource.password" : "${MYSQLDB_PASSWORD}",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    networks:
      - myblog-network
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  frontend:
    container_name: frontend-nextjs
    image: burakyapici747/blog-frontend:latest
    networks:
      - myblog-network
    ports:
      - 3000:3000

  nginx:
    image: nginx:alpine
    container_name: api-gateway
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - myblog-network
    depends_on:
      - frontend

networks:
  myblog-network:
    driver: bridge

volumes:
  db:
