name: Blog Frontend Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - my-website-fe/**
      - ./docker/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

jobs:
  build-image:
    name: Build FE Docker Image
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract project version
        id: extract_version
        run: |
          cd my-website-fe
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: my-website-fe
          file: ./my-website-fe/docker/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest,${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }}
  deploy:
    name: Deploy Frontend                                                                                              
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh -p ${{ secrets.VDS_PORT }} ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }} "mkdir -p ci-cd"

      - name: Copy project files
        run: |
          scp -P ${{ secrets.VDS_PORT }} -r my-website-fe ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }}:ci-cd/
          scp -P ${{ secrets.VDS_PORT }} -r my-website-be ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }}:ci-cd/
          scp -P ${{ secrets.VDS_PORT }} -r my-website-fe/docker ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }}:ci-cd/
          scp -P ${{ secrets.VDS_PORT }} -r my-website-be/docker ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }}:ci-cd/

      - name: Copy docker-compose file
        run: scp -P ${{ secrets.VDS_PORT }} -oStrictHostKeyChecking=no docker-compose.yml ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh -p ${{ secrets.VDS_PORT }} ${{ secrets.VDS_USERNAME }}@${{ secrets.VDS_IP }} <<EOF
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF 
